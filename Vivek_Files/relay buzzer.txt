/*
Program : LAB1
*/
#include <p18f4550.h>

/*The following lines of code perform interrupt vector relocation to work with the USB bootloader. These must be used with every application program to run as a USB application.*/
extern void _startup (void);
#pragma code _RESET_INTERRUPT_VECTOR = 0x1000

void _reset (void)
{
	_asm goto _startup _endasm
}

#pragma code
#pragma code _HIGH_INTERRUPT_VECTOR = 0x1008
void high_ISR (void)
{
}

#pragma code
#pragma code _LOW_INTERRUPT_VECTOR = 0x1018
void low_ISR (void)
{
}
#pragma code
/*End of interrupt vector relocation*/

/*Start of main program*/
void MsDelay (unsigned int time)
{
	unsigned int i, j;
	for (i = 0; i < time; i++)
		for (j = 0; j < 710; j++);/*Calibrated for a 1 ms delay in MPLAB*/
}
#define lrbit PORTBbits.RB4
#define rlbit PORTBbits.RB5
#define buzzer PORTCbits.RC2
#define relay PORTCbits.RC1
#define relay1 PORTCbits.RC0

void main()
{
    unsigned char val=0;
	unsigned int k;
    INTCON2bits.RBPU=0; 
	ADCON1 = 0x0F;

	TRISBbits.TRISB4=1;
	TRISBbits.TRISB5=1;
	TRISCbits.TRISC1=0;
	TRISCbits.TRISC2=0;
	TRISD = 0x00;
	PORTD = 0x00;
	buzzer = 0;
	relay = 0;
	relay1 = 0;

		while (!(lrbit)) 
		{
		buzzer = 1;
		relay = 1;
		relay1 = 1;
		PORTD = PORTD >>1;
		 if (PORTD == 0x00)
			PORTD = 0x80;
		MsDelay(250);
		}
		while (!(rlbit)) 
		{
		buzzer = 0;
		relay = 0;
		relay1 = 0;
		PORTD = PORTD<<1;
		 if (PORTD == 0x00)
			PORTD = 0x01;
		MsDelay(250);
		}

        
     
}